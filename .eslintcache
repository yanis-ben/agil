[{"C:\\Users\\bys1\\docto-test\\src\\index.js":"1","C:\\Users\\bys1\\docto-test\\src\\App.js":"2","C:\\Users\\bys1\\docto-test\\src\\reportWebVitals.js":"3","C:\\Users\\bys1\\docto-test\\src\\components\\Navbar.js":"4","C:\\Users\\bys1\\docto-test\\src\\components\\Button.js":"5","C:\\Users\\bys1\\docto-test\\src\\Firebase\\index.js":"6","C:\\Users\\bys1\\docto-test\\src\\Firebase\\firebase.js":"7","C:\\Users\\bys1\\docto-test\\src\\Firebase\\context.js":"8","C:\\Users\\bys1\\docto-test\\src\\Pages\\MesDocuments.js":"9","C:\\Users\\bys1\\docto-test\\src\\Pages\\Default.js":"10","C:\\Users\\bys1\\docto-test\\src\\Pages\\Home\\Home.js":"11","C:\\Users\\bys1\\docto-test\\src\\Pages\\Login\\Login.js":"12","C:\\Users\\bys1\\docto-test\\src\\Pages\\Logout\\Logout.js":"13","C:\\Users\\bys1\\docto-test\\src\\Pages\\Signup\\Signup.js":"14","C:\\Users\\bys1\\docto-test\\src\\Pages\\ForgetPassword\\ForgetPassword.js":"15","C:\\Users\\bys1\\docto-test\\src\\Pages\\index.js":"16","C:\\Users\\bys1\\docto-test\\src\\Pages\\Dashboard\\Dashboard.js":"17"},{"size":991,"mtime":1639673072883,"results":"18","hashOfConfig":"19"},{"size":1613,"mtime":1641892450414,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2861,"mtime":1641811027508,"results":"22","hashOfConfig":"19"},{"size":642,"mtime":1610831693744,"results":"23","hashOfConfig":"24"},{"size":134,"mtime":1641894630740,"results":"25","hashOfConfig":"19"},{"size":1258,"mtime":1641894646792,"results":"26","hashOfConfig":"19"},{"size":115,"mtime":1617993316483,"results":"27","hashOfConfig":"19"},{"size":305,"mtime":1639736703911,"results":"28","hashOfConfig":"19"},{"size":710,"mtime":1639730158219,"results":"29","hashOfConfig":"19"},{"size":306,"mtime":1641827188811,"results":"30","hashOfConfig":"19"},{"size":6559,"mtime":1641811692277,"results":"31","hashOfConfig":"19"},{"size":1361,"mtime":1641682052373,"results":"32","hashOfConfig":"19"},{"size":8104,"mtime":1641849745965,"results":"33","hashOfConfig":"19"},{"size":4097,"mtime":1639736597861,"results":"34","hashOfConfig":"19"},{"size":480,"mtime":1639736693878,"results":"35","hashOfConfig":"19"},{"size":1565,"mtime":1641827144608,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"qdu3c0",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1h3s3j7",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},"C:\\Users\\bys1\\docto-test\\src\\index.js",[],["78","79"],"C:\\Users\\bys1\\docto-test\\src\\App.js",["80"],"C:\\Users\\bys1\\docto-test\\src\\reportWebVitals.js",[],"C:\\Users\\bys1\\docto-test\\src\\components\\Navbar.js",["81","82"],"import React, {useState, useEffect, useContext } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { FirebaseContext } from \"../Firebase\";\r\nimport Logout from \"../Pages/Logout/Logout\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nimport {\r\n  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse,\r\n  MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon\r\n  } from \"mdbreact\";\r\n\r\n\r\n          //comment appeler mon button logout le template Bootstrap\r\nconst Navbar = () => {\r\n\r\n  /* on récupère les methods de firebase.js grace UseContext\r\n     loginUser la mthode d'ont j'ai besoin  */\r\n     const firebase = useContext(FirebaseContext);\r\n\r\n      const history = useHistory();\r\n      const location = history.location.pathname.split('/').pop();\r\n      const isDashboard = location === \"dashboard\";\r\n\r\n  const [userSession, setUserSession] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let listener = firebase.auth.onAuthStateChanged(user => {\r\n      setUserSession(user);\r\n  })\r\n    return () => {\r\n      //Permet de faire le nétoyage pour éviter les fuite mémoires\r\n      listener();\r\n    }\r\n  }, [])\r\n\r\n  \r\n \r\n\r\n\r\n\r\n      return (\r\n       \r\n      <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          {/* <strong className=\"white-text\" to=\"/login\">AGIL</strong> */}\r\n          <Button className=\"white-text\" href=\"/\" >AGIL</Button>\r\n          {/* <img src={AGIL}/> */}\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler  />\r\n        <MDBCollapse id=\"navbarCollapse3\" navbar>\r\n          <MDBNavbarNav left>\r\n\r\n            <Button href=\"/\">Nos services</Button>\r\n            <Button href=\"/\">Notre fonctionnement</Button>\r\n            \r\n           \r\n          </MDBNavbarNav>\r\n          <MDBNavbarNav right>\r\n          <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" />\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\">\r\n                  <MDBDropdownItem href=\"#!\">Mon profil</MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"#!\">Mes missions</MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            \r\n            </MDBNavItem>\r\n            \r\n            \r\n            <MDBNavItem>\r\n             \r\n              {isDashboard ? \r\n              \r\n                <Logout/> \r\n              \r\n              : \r\n                <MDBNavItem>\r\n                  <Button href=\"/login\">Connexion</Button>\r\n                  <Button href=\"/signup\">Inscription</Button>\r\n                </MDBNavItem>\r\n              }\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    \r\n        );\r\n    \r\n}\r\nexport default Navbar;\r\n\r\n","C:\\Users\\bys1\\docto-test\\src\\components\\Button.js",[],["83","84"],"C:\\Users\\bys1\\docto-test\\src\\Firebase\\index.js",[],"C:\\Users\\bys1\\docto-test\\src\\Firebase\\firebase.js",[],"C:\\Users\\bys1\\docto-test\\src\\Firebase\\context.js",[],"C:\\Users\\bys1\\docto-test\\src\\Pages\\MesDocuments.js",[],"C:\\Users\\bys1\\docto-test\\src\\Pages\\Default.js",[],"C:\\Users\\bys1\\docto-test\\src\\Pages\\Home\\Home.js",[],"C:\\Users\\bys1\\docto-test\\src\\Pages\\Login\\Login.js",["85"],"import React, { useState, useEffect, useContext} from 'react';\r\n//import {Switch,Route} from \"react-router-dom\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FirebaseContext } from \"../../Firebase\";\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\nconst  Login = (props) => {\r\n\r\n    const classes = useStyles(); \r\n\r\n    /* on récupère les methods de firebase.js grace UseContext\r\n     loginUser la mthode d'ont j'ai besoin  */\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [btn, setbtn] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // [] tableau vide veut dire que le useEffect va se dclancher qu'une seule fois, c'est l'quivalent de componentDidmount\r\n    useEffect(() => {\r\n        if(password.length > 5 && email !== \"\"){\r\n            setbtn(false)\r\n        } else if (btn) {\r\n            setbtn(true) // permet de disabeled le button quand la conditon n'est pas respecter une 2 ème fois\r\n        }\r\n    }, [password, email, btn])// [password, email, btn] represent la dpendence\r\n\r\n    const handleSubmit = e => {\r\n \r\n        e.preventDefault(); // éviter le rechargement de la page, sinon on risque de perdre les valeurs qu'on a dans les variables d'états\r\n        console.log(email, password);\r\n\r\n        firebase.loginUser(email, password)\r\n        .then(user => { // .then c'es tla rpense de loginUser qui veut dire qu'on a réusi à ce connecter \r\n            console.log(email, password);\r\n            props.history.push(\"/dashboard\");\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n        })\r\n        .catch(error => {\r\n            // vider les champs quand la personne se trompe pour qu'elle puisse tenter de se connecter\r\n            setError(error);\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n\r\n        })\r\n    }\r\n\r\n        // gestion des erreurs\r\n        //const errorMessage = error !== '' && <span>{error.message}</span>;\r\n\r\n        const disabled = email === \"\" || password === \"\";\r\n        return(\r\n            \r\n            \r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                    \r\n                    </Avatar>\r\n                    \r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                    Connexion\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        disabled = {disabled}\r\n                    >\r\n                        Se connecter\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                        <Link \r\n                            to=\"/forgetPassword\"\r\n                            href=\"#\" \r\n                            variant=\"body2\">\r\n                            Mot de passe oublié ?\r\n                        </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Link \r\n                            to=\"/signup\"\r\n                            href=\"#\" \r\n                            variant=\"body2\">\r\n                            {\"Pas encore inscrit ? Sign Up\"}\r\n                        </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n            \r\n        )\r\n}\r\n\r\n\r\nexport default Login;\r\n\r\n/* <div >\r\n\r\n                <form className=\"signUpLoginBox\">\r\n                    <input onChange={(e) => setEmail(e.target.value)} id=\"email\" name='email' placeholder='email'/>\r\n                    <input onChange={(e) => setPassword(e.target.value)} id=\"password\" name='password' placeholder='password'/>\r\n                    \r\n                    <input onClick={handleSubmit} type=\"submit\" value=\"Submit\" />\r\n                    \r\n                </form>   \r\n            </div> */\r\n\r\n\r\n\r\n","C:\\Users\\bys1\\docto-test\\src\\Pages\\Logout\\Logout.js",["86"],"import React, { useState, useEffect, useContext} from 'react';\r\nimport { FirebaseContext } from \"../../Firebase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {MDBNavbarNav , MDBNavItem, MDBCollapse} from \"mdbreact\";\r\n\r\nconst Logout = (props) => {\r\n\r\n    /* on récupère les methods de firebase.js grace UseContext\r\n     loginUser la mthode d'ont j'ai besoin  */\r\n     const firebase = useContext(FirebaseContext);\r\n\r\n    const [logout, setLogout] = useState(false);\r\n    console.log(logout, \"111\");\r\n\r\n    useEffect(() => {\r\n        if(logout){\r\n            console.log(\"Deconnexion 333\");\r\n            firebase.signoutUser()\r\n            .then((result) => {\r\n                props.history.push(\"/\");\r\n                console.log(\"Home\");\r\n            }).catch((err) => {\r\n                \r\n            });\r\n\r\n        }\r\n        \r\n    }, [logout]);\r\n\r\n    const handleLogout = () => {\r\n        setLogout(true);\r\n        console.log(logout, \"déconnexion\");\r\n    }\r\n    return (\r\n        \r\n        <MDBCollapse id=\"navbarCollapse3\" navbar>\r\n            <MDBNavbarNav right className=\"logout-btn\" onClick={handleLogout}>\r\n                <MDBNavItem>\r\n                <Button href=\"/\">Logout</Button>\r\n                </MDBNavItem>\r\n            </MDBNavbarNav>\r\n        </MDBCollapse>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Logout;\r\n\r\n\r\n","C:\\Users\\bys1\\docto-test\\src\\Pages\\Signup\\Signup.js",["87","88","89","90"],"import React, {useState, useContext} from \"react\";\r\nimport { FirebaseContext } from \"../../Firebase\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst Signup = (props) => {\r\n\r\n    const classes = useStyles(); \r\n\r\n    // on récupère les methods de firebase.js grace au context\r\n    const firebase = useContext(FirebaseContext);\r\n    console.log(firebase);\r\n\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [lastname, setLastname] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [btn, setbtn] = useState(false);\r\n\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n\r\n    const handleSubmit = e => {\r\n \r\n        e.preventDefault(); // éviter le rechargement de la page, sinon on risque de perdre les valeurs qu'on a dans les variables d'états\r\n        console.log(firstName, lastname, email, password);\r\n\r\n        firebase.loginUser(firstName, lastname, email, password, confirmPassword)\r\n        .then(user => { // .then c'est la répense de loginUser qui veut dire qu'on a réusi à se connecter \r\n            console.log(firstName, lastname, email, password);\r\n            props.history.push(\"/dashboard\");\r\n            setFirstName(\"\");\r\n            setLastname(\"\");\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n        })\r\n        .catch(error => {\r\n            // vider les champs quand la personne se trompe pour qu'elle puisse tenter de se connecter\r\n            setError(error);\r\n            setFirstName(\"\");\r\n            setLastname(\"\");\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n\r\n        })\r\n    }\r\n    \r\n    const disabled = email === \"\" || password === \"\";\r\n    return (\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            \r\n            </Avatar>\r\n            \r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Inscription\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n            <TextField\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"firstName\"\r\n                name=\"firstName\"\r\n                autoComplete=\"firstName\"\r\n                autoFocus\r\n            />\r\n            <TextField\r\n                onChange={(e) => setLastname(e.target.value)}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"lastName\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lastName\"\r\n                autoFocus\r\n            />\r\n            <TextField\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n            />\r\n            <TextField\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n            />\r\n            <TextField\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm password\"\r\n                label=\"confirm password\"\r\n                type=\"confirm password\"\r\n                id=\"confirmPassword\"\r\n                autoComplete=\"current-confirmPassword\"\r\n            />\r\n            <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n            />\r\n            <Button\r\n                onClick={handleSubmit}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled = {disabled}\r\n            >\r\n                Inscription\r\n            </Button>\r\n            <Grid container>\r\n                <Grid item xs>\r\n                <Link \r\n                    to=\"/forgetPassword\"\r\n                    href=\"#\" \r\n                    variant=\"body2\">\r\n                    Mot de passe oublié ?\r\n                </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                <Link \r\n                    to=\"/signup\"\r\n                    href=\"#\" \r\n                    variant=\"body2\">\r\n                    {\"Pas encore inscrit ? Sign Up\"}\r\n                </Link>\r\n                </Grid>\r\n            </Grid>\r\n            </form>\r\n        </div>\r\n    </Container>\r\n\r\n\r\n    )\r\n}\r\nexport default Signup;\r\n\r\n\r\n{/* <div className=\"signUpLoginBox\">\r\n\r\n<div className=\"formBoxSignUp\">\r\n    <div className=\"formContent\">\r\n\r\n        {errorMessage}\r\n\r\n        <h2>Inscription</h2>\r\n        <form onSubmit={handleSubmit}>                        \r\n            <div className=\"inpuBox\">\r\n                <input onChange={handleChange} value={firstName} type=\"text\" id=\"firstName\" autoComplete=\"off\" required/>\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n            </div>\r\n\r\n            <div className=\"inpuBox\">\r\n                <input onChange={handleChange} value={lastName} type=\"text\" id=\"lastName\" autoComplete=\"off\" required/>\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n            </div>\r\n\r\n            <div className=\"inpuBox\">\r\n                <input onChange={handleChange} value={email} type=\"email\" id=\"email\" autoComplete=\"off\" required/>\r\n                <label htmlFor=\"email\">Email</label>\r\n            </div>\r\n\r\n            <div className=\"inpuBox\">\r\n                <input onChange={handleChange} value={password} type=\"password\" id=\"password\" autoComplete=\"off\" required/>\r\n                <label htmlFor=\"password\">Password</label>\r\n            </div>\r\n\r\n            <div className=\"inpuBox\">\r\n                <input onChange={handleChange} value={confirmPassword} type=\"password\" id=\"confirmPassword\" autoComplete=\"off\" required/>\r\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n            </div>\r\n            {btn}\r\n        </form>\r\n        <div className=\"linkContainer\">\r\n            <Link className=\"simpleLink\" to=\"/login\">Déjà inscrit ? connectez-vous.</Link>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div> */}","C:\\Users\\bys1\\docto-test\\src\\Pages\\ForgetPassword\\ForgetPassword.js",[],"C:\\Users\\bys1\\docto-test\\src\\Pages\\index.js",[],"C:\\Users\\bys1\\docto-test\\src\\Pages\\Dashboard\\Dashboard.js",["91","92","93","94","95","96"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Home } from \"..\";\r\nimport { FirebaseContext } from \"../../Firebase\";\r\n\r\n\r\nconst Dashboard = (props) => {\r\n    //loggedInStatus={loggedInStatus}\r\n\r\n    const {handleLogin, loggedInStatus} = props;\r\n    /* on récupère les methods de firebase.js grace UseContext\r\n     loginUser la mthode d'ont j'ai besoin  */\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [userSession, setUserSession] = useState(null); \r\nconst [userData, setUserData] = useState({})\r\n    // ComponentDidMount en class\r\n    useEffect(() => {\r\n        let listener = firebase.auth.onAuthStateChanged(user => {\r\n            user ? setUserSession(user) : props.history.push('/');\r\n        })\r\n\r\n        // if (!!userSession) {\r\n        //     firebase.user(userSession.uid)\r\n        //     .get()\r\n        //     .then( doc => {\r\n        //         if (doc && doc.exists) {\r\n        //             const myData = doc.data();\r\n        //             setUserData(myData)\r\n        //         }\r\n        //     })\r\n        //     .catch( error => {\r\n        //         console.log(error);\r\n        //     })\r\n        // }\r\n\r\n        //Permet de faire le nétoyage pour éviter les fuite mémoires\r\n        return () => {\r\n            listener();\r\n        }\r\n    }, [])\r\n    //<Navbar/>\r\n    return userSession === null ?(\r\n        <p>Loading...</p>\r\n    ) : (\r\n        <div>\r\n            \r\n            <div>Dashboard : {userSession.email}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":16,"column":10,"nodeType":"103","messageId":"104","endLine":16,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":26,"column":10,"nodeType":"103","messageId":"104","endLine":26,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":36,"column":6,"nodeType":"108","endLine":36,"endColumn":8,"suggestions":"109"},{"ruleId":"97","replacedBy":"110"},{"ruleId":"99","replacedBy":"111"},{"ruleId":"101","severity":1,"message":"112","line":49,"column":12,"nodeType":"103","messageId":"104","endLine":49,"endColumn":17},{"ruleId":"106","severity":1,"message":"113","line":28,"column":8,"nodeType":"108","endLine":28,"endColumn":16,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"115","line":50,"column":12,"nodeType":"103","messageId":"104","endLine":50,"endColumn":15},{"ruleId":"101","severity":1,"message":"116","line":50,"column":17,"nodeType":"103","messageId":"104","endLine":50,"endColumn":23},{"ruleId":"101","severity":1,"message":"112","line":53,"column":12,"nodeType":"103","messageId":"104","endLine":53,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":198,"column":1,"nodeType":"119","messageId":"120","endLine":238,"endColumn":11},{"ruleId":"101","severity":1,"message":"121","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"122","line":9,"column":12,"nodeType":"103","messageId":"104","endLine":9,"endColumn":23},{"ruleId":"101","severity":1,"message":"123","line":9,"column":25,"nodeType":"103","messageId":"104","endLine":9,"endColumn":39},{"ruleId":"101","severity":1,"message":"124","line":15,"column":8,"nodeType":"103","messageId":"104","endLine":15,"endColumn":16},{"ruleId":"101","severity":1,"message":"125","line":15,"column":18,"nodeType":"103","messageId":"104","endLine":15,"endColumn":29},{"ruleId":"106","severity":1,"message":"126","line":40,"column":8,"nodeType":"108","endLine":40,"endColumn":10,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'userSession' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firebase.auth'. Either include it or remove the dependency array.","ArrayExpression",["130"],["128"],["129"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firebase' and 'props.history'. Either include them or remove the dependency array.",["131"],"'btn' is assigned a value but never used.","'setbtn' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Home' is defined but never used.","'handleLogin' is assigned a value but never used.","'loggedInStatus' is assigned a value but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firebase.auth' and 'props.history'. Either include them or remove the dependency array.",["132"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [firebase.auth]",{"range":"139","text":"140"},"Update the dependencies array to be: [firebase, logout, props.history]",{"range":"141","text":"142"},"Update the dependencies array to be: [firebase.auth, props.history]",{"range":"143","text":"144"},[1174,1176],"[firebase.auth]",[849,857],"[firebase, logout, props.history]",[1312,1314],"[firebase.auth, props.history]"]